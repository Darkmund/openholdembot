v1.7.0 2008-03-15
NEW STUFF:
- All Poker Tracker-compatible sites are now supported by OH for pulling Poker Tracker data.
  The table map must have s$network or s$sitename set to a supported name (see s$network below
  for a complete list). (quiqsilver)

- New symbol s$network is now available.  This is used to determine the appropriate
  network to pull Poker Tracker data for when s$sitename is not a PT supported site.  OH will
  first check s$sitename for a supported network name, then s$network.  These are the supported
  names for both s$sitename and s$network and must be lowercase: stars, party, ultimate, absolute,
  microgaming, ongame, cryptologic, pacific, fulltilt, b2b, tribeca, worldpex, ipoker, tain,
  bodog, everest, boss, and betfair. (quiqsilver)

- OpenHoldem will now use Poker Tracker data when connected to ManualMode if s$network or
  s$sitename in ManualMode's table map is set to a Poker Tracker compatible name. (quiqsilver)


BUG FIXES:
- OpenHoldem no longer performs unnecessary Poker Tracker database queries when we are not using
  a compatible site.


v1.6.0 2008-02-22
NEW STUFF:
- Table maps using fuzzy fonts are now utilized correctly in the scraper engine.

- OpenHoldem and OpenScrape now use an identical CTransform class (this is found in the
  transform.cpp/.h files).
  
- Formula Editor (Thanks Spew for the code)
  - Added help links to Wiki and Forum (Help/Wiki, Help/Forum)
  - Added popup help for symbols.  Look at the formula tree, select the "Symbols" tab,
    and hover your mouse pointer over the symbol that you are looking for help on.

- In a further attempt to reduce mis-swags, an additional mouse click on the edit box
  has been made after the text is deleted, and before the SWAG text is entered.
  (Autoplayer::do_swag)
  
- Added option to double click on action buttons.  This may help in dealing with those
  sites that have buttons that are "hard" to push.  
  Edit/Preferences/Autoplayer/Button Clicking Method (Thanks, Winngy for the idea)
  
- Added option to disable all symbol caching.  (Thanks, Matrix for the idea)
  Edit/Preferences/Symbols/Disable all Symbol Caching.
  

BUG FIXES:  
- Seeding of random number generator moved to COpenHoldemApp::InitInstance, and seed 
  now uses higher quality LowPart of QueryPerformanceCounter.  All other instances of
  "srand" have been removed. (Thanks, Miathan) 

- PokerPro: f$play was using value returned from f$call accidentally. This is a cut'n'paste 
  typo that has been corrected.  (Thanks HTC for the bug find & Spew for the code fix)  
  (PokerPro::DoAutoplayer)
  
- PokerPro: when connected to a poker pro server, m_holdem_state[m_ndx].m_title would always
  be blank.  (Thanks to Bozo for the bug find and Spew for the code fix).

- Parsing of money fields was inconsistently applied. Some money fields recognized the "¢", "k"
  and "m" suffixes, and some did not, for example.  That function has been unified and all
  money fields should behave consistently now.  (Thanks, MrRuder)
  - the dollar sign ($) leader is discarded
  - commas are discarded
  - the remaining text is then fed through atof() to generate an internal double
  - the cent symbol (¢) or the letter (c) trailer causes the number to be divided by 100
  - the thousand (k) trailer causes the number to be multiplied by 1000
  - the million (m) trailer causes the number to be multiplied by 1000000 
  
- The stack0-9 symbols were including balances of players not currently playing in the hand.
  This has been corrected.  (Thanks, BrassKnuckles)  (CSymbols::calc_betbalancestack)
  

v1.5.1 2008-02-15
NEW STUFF:
- "File/Load Profile" menu item changed to "File/Load Table Map" (Oops) (Thanks, Folder)


BUG FIXES:  
- ICM prize settings were all being saved to the registry with the 1st prize value.
  (Thanks, Nick Coldhand) (CDlgSAPrefs7::OnOK)

- Code accidentally deleted during merge of Matrix's weighted-prwin functionality has been
  restored.  Thanks to jumpingfences for first identifying the bug, and to Matrix for 
  finding my merging mistake.  (threads.cpp, prwin_thread)
  
- Between the text selection and text deletion action of a swag event, there was a return of
  the cursor to its original position.  This may have been a cause of the strange swag entries,
  but testing is needed to see if there is a difference.  In any case, it has been removed, as
  it is redundant, and the only return of the cursor now happens after the completion of the
  entire swag event.  (Autoplayer::do_swag)
  

v1.5.0 2008-02-08
NEW STUFF:
- Formula Editor (Code by Spew)
  - Added Find Next/Prev to the Edit menu
  - Added F3 and Shift F3 shortcuts for Find Next/Prev 
  
- Merged Matrix's alternative weighted-prwin code to the project:

This is the model implemented in the weighted prwin. The two most important points are f$willplay,
the handrank169 value below which opponents will almost certainly play cards; and f$wontplay, the 
value above which they are highly unlikely to play. Two further values are provided to allow for 
simulation of the case where with low pre-flop betting good cards start to be less likely merely 
to be called (f$topclip), but the very best hands might be slowplayed to tease more out of the 
pot (f$mustplay).

p |---|    ---------
r |   |   /         \
o |   |  /           \
b |   | /             \
a |   |/               \
b |                     \
l -----------------------------------------------------
e     1    2       3     4     handrank169 ->
1=mustplay
2=topclip
3=willplay
4=wontplay
(with the current statistics available in OH only willplay and wontplay should be used. mustplay 
and topclip are debatable constructs at the best of times)

Ideally you would base the calculations of these points on the statistics for opponent betting 
pre-flop at various bet levels. This information is not currently available from OH (unless you use
the PokerTracker capabilities), but the single most useful statistic, SingleMalt's floppct, can 
be used. Using this to set f$willplay and f$wontplay gives the major advantage which a weighted 
prwin gives; the elimination of rags from the iterator calculations. A starting point might be 
something like:

##f$willplay##
handsplayed<10?72:180*floppct

##f$wontplay##
f$willplay*1.4

If f$willplay is absent, or returns zero, the prwin weighting is disabled, as it is if the f$P is 
greater than 13. The calculation will not weight the cards for an opponent who is BB and has limped 
into the flop. f$willplay will be increased internally if it is so low that the iterator cannot assign 
cards for all opponents from the available matching hands. 



BUG FIXES:  
- Manual replay frame shooting: Sometimes, OH will hang indefinitely while waiting for threads to
  finish, when snapping a manual replay frame (camera toolbar icon).  Put hard stop in code to avoid
  an endless wait. (CGlobal::create_replay_frame)

- f$ function results were sometimes being cached in the Formula Editor's working set inappropriately,
  and resulting in stale values being presented in the dialog.  All working set f$ functions are now
  set to "stale" upon each click of the "Calc" button, and on every update of f$debug when it is set
  to "Auto" mode.  (Thanks, DonPauleone)  (CDlgFormulaScintilla::OnBnClickedCalc, and
  CDlgFormulaScintilla::update_debug_auto)
  
- This is not a bug, just code cleanup.  Moved the following code out of the inner loop in 
  CSymbols::calc_nhands.  (Thanks, Thrillhouse)
CardMask_OR(playerEvalCards, plCards, comCards);
hv_player = Hand_EVAL_N(playerEvalCards, nplCards+ncomCards);
pl_pokval = calc_pokerval(hv_player, nplCards+ncomCards, &dummy, CARD_NOCARD, CARD_NOCARD);

- Added default case to switch statement in COpenHoldemView::draw_card.  (Thanks, jumpingfences)

- vs$xx$prwin/los/tie now works correctly in rounds other then br==1.  Internal counters were not being
  reset for br==2,3,4.  (Thanks, Brass Knuckles)  (CVersus::get_counts)


v1.4.4 2008-02-01
NEW STUFF:
- Hand Lists can now contain comments.  Comment lines are prefaced with the standard double forward 
  slash "//".  The hand list parsing function has been made more efficient in its processing and by 
  using pointer arithmetic instead of Mid().  The hand list parsing function has also been moved to 
  CGlobal::ParseHandList, as there was duplicate code contained in the Formula dialog to handle the 
  Hand List dialog.  (Code by Spew)
  
- Formula Editor: (Code by Spew)
  - Added keyboard shortcuts to take advantage of Scintilla Bookmarks Ctrl-F2 to set, F2 to go to next, 
    Shift-F2 to go to previous.  (Code by Spew)
  - Added modeless Find dialog. Implemented such that you can always bring it up but it only works if 
    you have a valid Formula/Hand List active (But you can have the focus on the tree control).  
  - Cleaned up Formula dialog code with respect to enabling and disabling. Previously the enabling or 
    disabling of the UI was interspersed in the various functions that dealt with user input. All the 
    enables/disables are consolidated in one function that will assess the state of dialog and enable 
    all the controls/menus/toolbars/etc as necessary.

- Per BillW, commented out loading of i$ records from a profile, until the time when the "Image"
  transform is enabled in OH code. (profile.cpp, load_profile)
  
- Per BillW, removed Save Profile code, as there is no need for this in OpenHoldem any longer, as all
  this functionality is contained within OpenScrape.  (profile.cpp, profile.h)
  
- Replay frame creation:
  - Settings for replay frame creation can be found in the preferences dialog.
  - Press the camera toolbar button on the main window, or use the "View/Shoot Replay Frame" menu option
    to create a new replay frame at any time you want, provided that you are connected to a poker window.
  - Replay frames are 100% compatible with whreplay.exe; we fully expect to develop a whreplay
    replacement in the near future, but this will do for now.  In order to use whreplay, either:
      1. OpenHoldem and whreplay must exist in your winholdem install folder, or
      2. You must change the HKCU/Software/WinHoldEm/InstallFolder registry key to point to the location of your
         OpenHoldem directory.
    The reason for this is that whreplay uses the value of the HKCU/WinHoldEm/InstallFolder registry key
    as the base of the file path in which it looks for the "replay" directory.  So when you fire up
    whreplay, press F2, and enter your session.frame number, it will look in the "InstallFolder" path
    for that session and frame.  Personally, I just created that key, pointed it to my OpenHoldem
    directory, and dropped whreplay.exe in my OpenHoldem directory - easy peasy.  Of course, WinHoldem
    is not even installed on my machine any more, so your mileage may vary.   

- Autoplayer SWAG: WinHoldem only supported one option for tuning SWAG action; swag delay.  Up to this point, 
  OpenHoldem only supported the one tuning option as well.  As of this release, there are now 3 settings:
  1. Delay between text selection and text deletion (default 400 ms)
  2. Delay between text deletion and swag amount entry (default 400 ms)
  3. Delay between swag amount entry and bet confirmation action; this is the old "swag delay" (default 700 ms)
  
- Autoplayer allin: As we continue to remove support for the legacy WinHoldem allin (slider) functionality,
  we are removing the ability to edit "Allin Delay" in Edit/Preferences/Autoplayer in this release.  This value 
  is not used anywhere within the OH code base anyway.
  
      
BUG FIXES:  
- As OH becomes more widely deployed, in multi-table situations, there have been some reports of accidental 
  movement of other windows on the screen when the OH autoplayer acts.  OH internally uses a system-wide mutex
  to prevent this from happening - no OH instance can interfere with anout OH instance.  However, when you add
  hoppers and other programs/scripts to the mix, there very well can be collisions.  In this build, I have added 
  a mouse movement back to the original position at the end of every input queue.  A SetCursorPos was always 
  executed after the execution of an input queue, this last mouse movement is just for safety purposes. Hopefully 
  this will make it better, however if this does not solve the problem, then the only solution may be to have 
  hopper scripts utilize the same system-wide mutex that OH uses.  (Autoplayer.cpp)  (Thanks, Folder)
  
- Symbol "elapsedauto" corrected to reset to zero after autoplayer action.  (Autoplayer.cpp) (Thanks, Zippy)

- In CGlobal::capture_state, changed the copying of the title to the state structure to use a strncpy instead
  of a strcpy.  This will protect against buffer overruns with long titles.  (Thanks, Spud)
  
- Formula Editor: During the cleanup I noticed that if you press the New/Rename buttons and Canceled the dialog would 
  incorrectly switch your focus to the tree control and mark the Formulas as modified (so you were 
  incorrectly prompted to apply when closing). This has been fixed. (Bug identification and code fix by Spew)
  

v1.4.3 2008-01-25
NEW STUFF:
- Added File/Connect menu option.  This performs the same function as clicking on the
  green button.  (Thanks, Nick Coldhand)
  
- Added View/Sort UDF's menu option to the Formula Editor.  Its function is self-explanatory,
  I hope.
  
- Formula Editor: expanded/not-expanded states of formula tree nodes are now saved between sessions.

- Formula Editor: when Apply or OK is pressed, the warning that pops up will now *ask* if you want to
  disable the autoplayer, rather than assuming you want to do so and just do it.  (Thanks, Matrix)
  
- Nick Coldhand found a site that requires more than the 3 chip stacks currently supported by the
  chip scraping engine.  The maximum number of stacks that can be scraped is now 10.  The maximum
  number of chips per stack is still 20.  These numbers are #defined in structs_defines.h, btw, if 
  you ever want to change them.  Easy to change/recompile, and you are good to go.
  

BUG FIXES:  
- Fixed problem with bestaction disaply in main window fluctuating rapidly (Thanks, Winngy)
  (CMainFrame::OnTimer)

- Fixed a pretty serious error in grammar.cpp, eval_expression.  Results of recursive calls to
  eval_expression were being casted to a long type, rather than an unsigned long type.  The MSB
  is important in a number of symbols, a good example being pokerval.  To demonstrate the bug,
  put the following in f$debug:
    =onepair&0xff000000
    
  Press calc, and the result will be zero, which is incorrect.  However, this expression returns 
  the expected result, as the MSB is taken out of the equation:
    =onepair&0x7f000000
    
  Another good example is the bitwise not operator (~).  In some cases, the wrong result would be returned:
  ex: "~1" should return "4294967294" (every bit set except the LSB), but was returning "-2", due to the MSB
  being interpreted as the sign.  All casts in eval_expression are now of type unsigned long, which 
  corrects the error.
  
- Formula Editor: Continuing code review and cleanup by Spew:
  a. Replacement of stickybutton class with standard pushbutton-style checkbox
  b. Auto button can now be turned off consistently
  c. Focus stealing when updating the debug tab has been eliminated, thus eliminating the flickering sometimes
     seen when Auto is engaged

- Chip scraping was not using the proper hash seed for the various hash types.  Hash1-Hash3 now use the proper
  type, and chip scraping works again.  (Thanks, UKBotter and Nick Coldhand)  (CScraper::do_chip_scrape)
  
  
  
v1.4.2 2008-01-18
NEW STUFF:
- Added hand list editor dialog to Formula Editor.  (Thanks, SingleMalt, for the code)


BUG FIXES:  
- seatposition symbol corrected to not count empty seats (Thanks, Nick Coldhand)
  (CSymbols::calc_roundspositions)
  
- Weirdness with formula dialog and "Do you want to save your changes?" has been corrected.
  Previous to this fix, if you 1) open the formula editor and make a change, and do not press
  apply/ok, then 2) close the formula dialog, and select "no" to the save question, then 3) reopen
  the formula dialog, it would ask you again if you wanted to save.  (Thanks, Matrix for the
  bug find and Spew for the code fix) (CDlgFormulaScintilla::OnBnClickedCancel,
  CDlgFormulaScintilla::DestroyWindow)
  
- An issue existed where saving your forumula would add extra blank lines to the whx file (but not
  the whf file).  This has been corrected, and all extra blank lines that may have been added over
  time will be removed the next time you open and save the formula file.  (Thanks, Spew for the
  code fix)  (COpenHoldemDoc::ReadFormula, COpenHoldemDoc::WriteFormula)

- Chip scraping is now displayed in scraper output window correctly.  (Thanks, radi8tor for the bug
  find and UKbotter for the code fix)  (CScraper::scrape_pots)
  
- Chip scraping had a bug with identification and handling of horizontal and vertical stride regions.
  (Thanks, UKbotter for the bug find and code fix)  (CGlobal::save_r$indexes)



v1.4.1 2008-01-11
NEW STUFF:
- Logging; on a hand reset, the title text from the table is now recorded in the log.  This
  should help identify the proper log entries, especially if you do not have a casino/table map
  that supports handnumbers.
  

BUG FIXES:  
- ICM
  - Player balances are now captured at the beginning of each hand for use by the ICM
    calculator; this happens in CSymbols::CalcSymbols, and is stored in the CSymbols
    class.
  - Removal of ICM::IsResetHandState, ICM::IsBalanceKnown, ICM::GetPlayerBalance, and
    ICM::GetPlayerLastBalanceKnown as these methods have been rendered moot by the 
    above point.
  - ICM::GetPlayerCurrentBet method removed and replaced with a direct reference to the values
    stored in the CSymbols class.
    
- Improved time of Green Button to find tables.  This function was coded really early on in
  the OpenHoldem project and has not been revisited in a long time.  It was loading every
  .tm/.ws file in the scraper folder once for each candidate window on the screen, thus
  there was a geometric relationship between the number of windows times the number of table maps 
  and the time it took the Green Button to finish it's work.  The relationship is now linear as
  related to the number of .tm/.ws files in the scraper folder.
  (CMainFrame::OnBnClickedGreenCircle; profile.cpp, EnumProcTopLevelWindowList)
  (Thanks, Nick Coldhand).
  
- In the Formula Editor dialog, undo stacks are now properly maintained for each individual
  formula in the set.  Previously, you could make a change to one formula, switch to another
  formula, press undo (Ctrl-z) and see the changes that were made in the other formula be undone
  in the new formula.  (CFormulaScintilla class)  (Bug identification and code fix by Spew)
  
- Per WinScrape specs, the maximum width of any given individual character in a text 
  transform field is 31 pixels.  Changed MAX_SINGLE_CHAR_WIDTH in structs_defines.h from
  30 to 31 to account for this.
    

v1.4.0 2008-01-04
NEW STUFF:
- File/Convert Profile (Ctrl R) has been removed from OpenHoldem.  Please use
  OpenScrape to convert your WinScrape profiles to OpenScrape table maps for
  use with OpenHoldem.
  
- OpenHoldem now defaults to looking for .tm files rather than .ws files.  It can
  still load old converted WinScrape profiles (converted by old versions of OpenHoldem), 
  but to ensure maximum forward compatibility, you should convert these to OpenScrape's 
  table map format.  At some point, the ability to load old converted WinScrape profiles
  will probably be removed. 
  
  1. The behavior when pressing the green circle button is that OpenHoldem will search
     first for .tm files in the scraper directory, then for .ws files.
  2. The behavior when choosing File/Load Profile is to present a file selector box
     with *.tm as a file mask.  You can chose "All Files" from the "Files of type" 
     dropdown in the file selector box if you want to manually load an old WinScrape
     profile that has been converted by an older version of OpenHoldem.

- Option added to Edit/Preferences, PokerTracker, to entirely disable the PokerTracker
  thread within OpenHoldem.  Please note that if you are currently using PokerTracker
  functionality, you *must* go into Edit/Preferences and uncheck the "Disable
  all PokerTracker access" box, otherwise your PokerTracker symbols will not work.  This
  setting will be saved, and must only be done this one time to get the entry set up
  in the registry properly.
  
- Added ICM calculator (thanks, Spud, for the code donation; thanks Nick Coldhand for the
  idea donation).  This should very much be considered beta code, and the results should
  be carefully validated before using in a production bot.  Jump into the "OpenHoldem
  Discussion" forum with your thoughts.
  
  1. Settings can be found under Edit/Preferences, ICM
  2. New symbols:
    - icm : my tournament equity before any action is considered (just balances)
	- icm_fold : my tournament equity if I fold
	- icm_callwin : my tournament equity if I call and win
	- icm_calllose: my tournament equity if I call and lose
	
	- icm_alliwin0: my tournament equity if I push all-in and nobody call
	- icm_alliwin1: my tournament equity if I push all-in and win against one caller
	- icm_alliwin2: my tournament equity if I push all-in and win against two callers
	  ...
	- icm_alliwin9: my tournament equity if I push all-in and win against nine callers
	
	- icm_allilose1: my tournament equity if I push all-in and lose against one caller
	- icm_allilose2: my tournament equity if I push all-in and lose against two callers
	  ...
	- icm_allilose9: my tournament equity if I push all-in and lose against nine callers 
     
- Added option to start autoplayer automatically upon identification of userchair.  Setting
  can be found in Edit/Preferences, Autoplayer.  If you manually turn off the autoplayer,
  then you must press the Red Circle button to disconnect from the table, then press the
  Green Circle button to reconnect to a table for the automatic autoplayer start to be
  effective again.
  
- Div/0 errors are now trapped while working in the formula editor and will no longer cause
  a OpenHoldem crash.  As of this release, div/0 errors will not affect the autoplayer, 
  however in a future release we may consider halting the autoplayer in a div/0 situation.
  
- Relaxed retriction on when currentbetx is recorded.  Previously, it would not record
  currentbet for a seat unless the number of opponents (cardbacks) was greater than zero,
  and the total pot was greater than zero.  Some sites do not update the total pot in a
  reliable field until the individual bets are swept in between betting rounds. (Full Tilt).
  The total pot > 0 restriction has been removed.  (CSymbols::calc_betbalancestack)
  
- Ability to engage the prefold button has been added.  There are several steps to accomplish
  this:
  1. In your table map, define any button, label and state region for the prefold button
     - The label should probably be a hash, and it needs to return "prefold" as the result
     - The button defines the clickable region
     - The state should return "yes" or "true" when it is available to be checked.  In other
       words, yes/true will indicate the unchecked state of the button.
  2. Write a formula for f$prefold that returns a non-zero result when the pre-fold button
     should be pushed.  As an example, this expression would click the pre-fold button only
     in betting round one when our hole cards are in the bottom third of the handrank2652 list:
     "br==1 && nplayersdealt>4 && handrank2652>2652*0.66 && !currentbet && !f$swag && !f$rais && !f$call"
  
  

BUG FIXES:  
- Settings dialog (from Formula Editor) has been replaced in the code base.  It was 
  removed accidentally as part of the great "Edit/Preferences" overhaul in v1.2.1.
  Oops.  (Thanks, dipitlow)

- Game Type dropdown in the Lock Blinds dialog has been resized to allow all options
  to be seen without scrolling. (CDlgLockBlinds::OnInitDialog)  (Thanks, HTC)

- Multiple 'calc' presses on the formula editor was not forcing a re-parse of the
  selected function if multiple changes were made between presses.
  (CDlgFormulaScintilla::LastChangeToFormula)
  
- Backtick operator (`) now shows up in black text on a white background, instead of
  white text on a white background.  (CDlgFormulaScintilla::set_style_colors)
  (Thanks, dipitlow)
  
- npcbits/pcbits symbols were sometimes reporting incorrect values.
  (CSymbols::calc_pokerval)  (Thanks, dipitlow)
  
- Clicking on the system close button ("X") on the main window would shut down
  OpenHoldem even if there were un-applied and unsaved changes in an open
  formula editor.  A warning now pops up that confirms this action.
  
- Updating of f$debug tab (when Auto/Calc pressed) was sometimes colliding with threads 
  from the formula editor dialog.  Updating of f$debug has been moved from the heartbeat
  thread to a timer in the Formula Dialog window thread.  
  (threads.cpp, heartbeat_thread and CDlgFormulaScintilla::OnTimer)
  

v1.3.1 2007-12-28
NEW STUFF:
- Support for reading OpenScrape table maps added.  
  Note:  As of next week's release, support for converting WinScrape profiles will be 
  removed.  OpenScrape will be the tool for conversion of WinScrape profiles going forward.


BUG FIXES:  
- Added check for valid PokerTracker connection prior to attempting database queries.
  (pokertracker.cpp, pokertracker_thread())  (Thanks, BillW)
  
- Fix identified by BillW for handnumber not incrementing has been applied.
  (CScraper::parse_string_bsl)
  
- A few HeapAlloc's did not have matching HeapFree's in situations of early return from
  the enclosing function.  This should only be applicable in rare situations, but 
  nevertheless should help stability.
  (profile.cpp, check_window_match(), CScraper::h_transform, CScraper::t_transform)
  
- Tree on Formula Editor changed to show selected item, even when focus moves elsewhere.
  (formula dialog, "Always Show Selection" property set to true)
  
- Small non-important typo fixed in convert_profile:  "if (hash_type>=0 && hash_type<=4)"
  changed to "if (hash_type>=0 && hash_type<=3)", as there is no such thing as a type 4
  hash.  This would never be encountered in real life, but we like clean code.
  (profile.cpp, convert_profile())
  
- Small non-important fix in CScraper::parse_string_bsl, in roman numeral handling section.
  Added 'token = "";' to initialize variable prior to parsing roman numerals.  Not important
  yet, as roman numerals are just thrown away.  However, should OpenHoldem implement a
  "tournlevel" symbol or something similar in the future, this will become relevant.
  
- Change to handling of swagging in autoplayer.  Previously, if f$swag evaluated to >0, then
  OH would try to swag regardless of the presence of the swag edit field or not (essentially
  it was ignoring the i3state region).  It now will try to swag only if i3state returns true.
  If f$swag>0 and i3state is not true, then the autoplayer will try to raise/call/check/fold
  in that order depending on the value of the f$ symbols and the presence of buttons.
  (Autoplayer::do_autoplayer)  (Thanks, Winngy)



v1.3.0 2007-12-21
NEW STUFF:
- Added busy cursor for long running operations, such as loading a very large formula set.

- Added message box to indicate when autoplay has been disabled due to a change in the active
  formula set.
  
- Added new menu option (DLL/Load Specific File) for those times when you just want to override
  all the automatic stuff and choose the DLL file manually.
  
- WaitForMultipleObjects used instead of WaitForSingleObject when applicable to speed up
  response time when waiting for threads to shutdown.  This usually happens when clicking
  the red button, for example.
  
- Behavior changed for sending state information to the DLL.  When the player is not playing
  (userchair does not have card faces) then the state will not be sent to the DLL any more.  This
  behavior is toggleable via a preference setting in Edit/Preferences/DLL Extension.
  [Note: This has the potential for massive performance improvement if you are a DLL user]

- PokerTracker integration is complete (functionality from SingleMalt's DLL)
  - Edit/Preferences/PokerTracker to set it up
    a. The "update delay" parameter is much like the core heartbeat thread.  Every so often, as
       determined by this number of seconds, the PokerTracker thread will wake up and do it's
       stuff.  This does not need to happen very often, as the information in PokerTracker
       does not change that often itself.
    b. The "cache refresh" parameter determines when the results from a PokerTracker query become
       stale and should be re-queried from the database.  Again, the information in PokerTracker
       does not change often enough for this to be a particularly low value.
  - Note: This feature requires a working PokerTracker installation using PostgreSQL as the backend
    database, and preferably using PT's auto-import to load the hand histories into the
    database.  Please see the Poker Tracker forums on information on how to accomplish all
    this.  (Microsoft Access as a backend database is not supported and likely never will be)
  - New symbols:
		Poker Tracker Ring symbols
		---------
		pt_iconx (x=0-9)       - Poker Tracker auto-rate icon code for chair x
		pt_iconlastrx (x=1-4)  - Poker Tracker auto-rate icon code for the last raiser in round x
		pt_pfrx (x=0-9)        - Poker Tracker pre-flop raise percentage for chair x
		pt_aggtotx (x=0-9)     - Poker Tracker total aggression for chair x
		pt_aggtotnopfx (x=0-9) - Poker Tracker total aggression excluding preflop for chair x
		pt_aggpx (x=0-9)       - Poker Tracker preflop aggression for chair x
		pt_aggfx (x=0-9)       - Poker Tracker flop aggression for chair x
		pt_aggtx (x=0-9)       - Poker Tracker turn aggression for chair x
		pt_aggrx (x=0-9)       - Poker Tracker river aggression for chair x
		pt_floppctx (x=0-9)    - Poker Tracker saw flop pct for chair x
		pt_turnpctx (x=0-9)    - Poker Tracker saw turn pct for chair x
		pt_riverpctx (x=0-9)   - Poker Tracker saw river pct for chair x
		pt_vpipx (x=0-9)       - Poker Tracker VP$IP for chair x
		pt_handsx (x=0-9)      - Poker Tracker number of hands that are in the database for chair x
		pt_pf_rfix (x=0-9)     - Poker Tracker "pre-flop raise first in" pct for chair x
		pt_pf_crx (x=0-9)      - Poker Tracker "pre-flop called raise" pct for chair x
		pt_pfatsx (x=0-9)      - Poker Tracker attempt to steal blinds for chair x
		pt_wsdpx (x=0-9)       - Poker Tracker went to showdown percentage for chair x
		pt_wssdx (x=0-9)       - Poker Tracker won $ at showdown for chair x
		pt_fsbtsx (x=0-9)      - Poker Tracker folded small blind to steal for chair x
		pt_fbbtsx (x=0-9)      - Poker Tracker folded big blind to steal for chair x 

		Poker Tracker Ring symbols for the "raischair"
		---------
		pt_ricon       - Poker Tracker auto-rate icon code for raise chair
		pt_rpfr        - Poker Tracker pre-flop raise percentage for raise chair
		pt_raggtot     - Poker Tracker total aggression for raise chair
		pt_raggtotnopf - Poker Tracker total aggression excluding preflop for raise chair
		pt_raggp       - Poker Tracker preflop aggression for raise chair
		pt_raggf       - Poker Tracker flop aggression for raise chair
		pt_raggt       - Poker Tracker turn aggression for raise chair
		pt_raggr       - Poker Tracker river aggression for raise chair
		pt_rfloppct    - Poker Tracker saw flop pct for raise chair
		pt_rturnpct    - Poker Tracker saw turn pct for raise chair
		pt_rriverpct   - Poker Tracker saw river pct for raise chair
		pt_rvpip       - Poker Tracker VP$IP for raise chair
		pt_rhands      - Poker Tracker number of hands that are in the database for raise chair
		pt_rpf_rfi     - Poker Tracker "pre-flop raise first in" pct for raise chair
		pt_rpf_cr      - Poker Tracker "pre-flop called raise" pct for raise chair
		pt_rpfats      - Poker Tracker attempt to steal blinds for raise chair
		pt_rwsdp       - Poker Tracker went to showdown percentage for raise chair
		pt_rwssd       - Poker Tracker won $ at showdown for raise chair
		pt_rfsbts      - Poker Tracker folded small blind to steal for raise chair
		pt_rfbbts      - Poker Tracker folded big blind to steal for raise chair

		Poker Tracker Tournament symbols
		---------
		ptt_iconx (x=0-9)       - Poker Tracker auto-rate icon code for chair x
		ptt_iconlastrx (x=1-4)  - Poker Tracker auto-rate icon code for the last raiser in round x
		ptt_pfrx (x=0-9)        - Poker Tracker pre-flop raise percentage for chair x
		ptt_aggtotx (x=0-9)     - Poker Tracker total aggression for chair x
		ptt_aggtotnopfx (x=0-9) - Poker Tracker total aggression excluding preflop for chair x
		ptt_aggpx (x=0-9)       - Poker Tracker preflop aggression for chair x
		ptt_aggfx (x=0-9)       - Poker Tracker flop aggression for chair x
		ptt_aggtx (x=0-9)       - Poker Tracker turn aggression for chair x
		ptt_aggrx (x=0-9)       - Poker Tracker river aggression for chair x
		ptt_floppctx (x=0-9)    - Poker Tracker saw flop pct for chair x
		ptt_turnpctx (x=0-9)    - Poker Tracker saw turn pct for chair x
		ptt_riverpctx (x=0-9)   - Poker Tracker saw river pct for chair x
		ptt_vpipx (x=0-9)       - Poker Tracker VP$IP for chair x
		ptt_handsx (x=0-9)      - Poker Tracker number of hands that are in the database for chair x
		ptt_pf_rfix (x=0-9)     - Poker Tracker "pre-flop raise first in" pct for chair x
		ptt_pf_crx (x=0-9)      - Poker Tracker "pre-flop called raise" pct for chair x
		ptt_pfatsx (x=0-9)      - Poker Tracker attempt to steal blinds for chair x
		ptt_wsdpx (x=0-9)       - Poker Tracker went to showdown percentage for chair x
		ptt_wssdx (x=0-9)       - Poker Tracker won $ at showdown for chair x
		ptt_fsbtsx (x=0-9)      - Poker Tracker folded small blind to steal for chair x
		ptt_fbbtsx (x=0-9)      - Poker Tracker folded big blind to steal for chair x 

		Poker Tracker Tournament symbols for the "raischair"
		---------
		ptt_ricon       - Poker Tracker auto-rate icon code for raise chair
		ptt_rpfr        - Poker Tracker pre-flop raise percentage for raise chair
		ptt_raggtot     - Poker Tracker total aggression for raise chair
		ptt_raggtotnopf - Poker Tracker total aggression excluding preflop for raise chair
		ptt_raggp       - Poker Tracker preflop aggression for raise chair
		ptt_raggf       - Poker Tracker flop aggression for raise chair
		ptt_raggt       - Poker Tracker turn aggression for raise chair
		ptt_raggr       - Poker Tracker river aggression for raise chair
		ptt_rfloppct    - Poker Tracker saw flop pct for raise chair
		ptt_rturnpct    - Poker Tracker saw turn pct for raise chair
		ptt_rriverpct   - Poker Tracker saw river pct for raise chair
		ptt_rvpip       - Poker Tracker VP$IP for raise chair
		ptt_rhands      - Poker Tracker number of hands that are in the database for raise chair
		ptt_rpf_rfi     - Poker Tracker "pre-flop raise first in" pct for raise chair
		ptt_rpf_cr      - Poker Tracker "pre-flop called raise" pct for raise chair
		ptt_rpfats      - Poker Tracker attempt to steal blinds for raise chair
		ptt_rwsdp       - Poker Tracker went to showdown percentage for raise chair
		ptt_rwssd       - Poker Tracker won $ at showdown for raise chair
		ptt_rfsbts      - Poker Tracker folded small blind to steal for raise chair
		ptt_rfbbts      - Poker Tracker folded big blind to steal for raise chair
  

BUG FIXES:  
- GetDIBits is one evil function.  It was causing some random stack corruptions.  Memory allocation
  for functions that require GetDIBits now allocate memory off of the process heap, rather than from
  the stack.  This has solved the problem.
  
- Main window was displaying best action, even when f$P evaluated to zero.  Main window will now display
  "Idle (f$P==0)" in this situation.  (CMainFrame::OnTimer)  (Thanks, Winngy)
  
- Was incorrectly sending m_name_known and m_balance_known bits to the DLL. (CScraper::scrape_name,
  CScraper::scrape_balance)  [Note: This has the potential for massive performance improvement if you
  are a DLL user and look at changes in state to know when to do your processing]

- All CString::Tokenize calls changed to accept both spaces and tabs as delimiters.  (profile.cpp, 
  symbols.cpp)  (Thanks, TheHighFish)
  
- Tweaked formula editor dialog to work more like the sandbox that it was intended to be.  Specifically,
  pressing "calc" will use whatever is in the edit window at that moment - it does not require "Apply" to
  be pressed first.  Edits that are made in the editor do not get applied to the main formula until
  "Apply" or "OK" is pressed.  One thing you may notice is that because the "active" formula set is very
  distinctly separate from the "sandbox" forumla set, OH will need to reparse the "sandbox" formula set
  when you "calc" or "auto".  Here's how OH works:
  1. You start up OH, it finds your last used formula set, opens it into the "active" set and parses it
  2. You open up the formula editor, OH copies the formula text into the "sandbox" set (it does not
     copy the parse results from the active set for several reasons, most of which are obscure technical
     ones.  PM me if you want more detail.)
  3. You press "calc" or "auto", OH parses all the formula text in the "sandbox" set and then proceeds
     as usual.
  Bottom line is that sometimes you may have to wait a moment for the "sandbox" set to get parsed the 
  first time you press "calc" or "auto".  Not a big deal, unless you have a very large formula (which is
  the case for one of Lab 1's bots, which has over 11,000 lines of OH-script code, and takes 45-60
  seconds to parse).
  

v1.2.2 2007-12-14
NEW STUFF:
- You might notice some PokerTracker capabilities starting to show up in various places.  Please
  ignore these features for this release as they are not fully baked and tested yet.  This is expected
  to be ready for prime time in next week's release.

BUG FIXES:  
- Best action was not being displayed properly in main window.
- Scraper engine was not properly handling the alpha channel for color separation. (scraper.cpp,
  profile.cpp)  (Thanks Winngy for initially identifying the bug, thanks BillW, Tinkerer, Indiana
  Winngy, TheHighFish, and Matrix for chiming in on the discussion thread and for contributing
  to the solution)
- Correction to normalized random distribution algorithm, per Indiana (Autoplayer::randomNormalScaled)
- srankbitsplayer, srankhiplayer, srankloplayer now returning correct values (CSymbols::calc_rankbits)
  See discussion here for more info: http://maxinmontreal.com/forums/viewtopic.php?t=2592
  (Thanks, Tinkerer)
  

v1.2.1 2007-12-07
NEW STUFF:
- Added "caching" for f$ symbols.
  OH will now cache f$ symbol results, and refer to the cache for queries to the same symbol in 
  the same cycle.  Each cycle, the cache will be flushed to force a recalc of each f$ symbol.  
  
  We are not caching dll$ symbols, because that is just foolish and asking for trouble--a lot of 
  DLL's rely on various symbol timings for their activities, and it is best not to mess with that.  

  We also are not adding the new goofy symbols that Ray has proposed for WH (scnage, scnhit, scnmiss, 
  scnused) as their only purpose is as a developer's debugging aid, and have zero value to the 
  OH-script bot writer.

  Performance improvements are on an order of 3 orders of magnitude for individual symbols.  Open up 
  the formula editor (don't connect to a table), choose a f$ function and click calc.  Note the timing 
  at the top of the dialog. Click calc again, note timing.  The first click calculated the f$ function 
  since the cache was dirty, the second click used the cached value.

  New function in grammar.cpp called calc_f$symbol and changed references throughout.  (Thanks, Ray!)

- New Edit/Preferences dialog.  The other one was getting crowded, so we created a new fancy-schmancy one.

- A new .whf section called "##dll##" is now supported.
  The implementation is slightly different than WH's, due to the fact that in OH, the dll's name to be
  loaded can be set in prefs. OH will use this decision path to determine
  which dll to load:
  A. On startup:
     1. Is "Load DLL on startup" ticked in Edit/Preferences? 
        a. If yes, then try to load the DLL file specified in the ##dll## section
        b. If yes and "a." fails, then try to load the dll specified in Edit/Preferences
     2. If "Load DLL on startup" is not ticked, then do nothing.
  B. On DLL/Load:
        c. Try to load the DLL file specified in the ##dll## section
        d. If "c." fails, then try to load the dll specified in Edit/Preferences  

- The PokerEval library and selected source code (only that part that is required for OpenHoldem)
  is now included within the source code archive. This was done to ensure consistency of the compilation 
  of the .lib file for those who choose to roll their own version of OpenHoldem.

BUG FIXES:  
- Random crashes in Autoplayer::check_bring_keyboard.  Changed from dynamic memory allocation
  in the function to static memory allocation.  (Thanks, SingleMalt).

- added "#include "debug.h" directive to RunRon.cpp (Thanks, A_K_A)

- View/Scraper Output and Edit/Formula not working (toolbar buttons work fine).  Fixed dialog
  allocation in CMainFrame::OnEditFormula and CMainFrame::OnScraperOutput)
  (Thanks, Spektre and TheHighFish)

- Modified heartbeat_thread to only call the dll$is_wait symbol when ismyturn is true.
  (Thanks, Tinkerer)

- Fixed bug whereby iXlabelY regions were not being handled.  (CScraper::scrape_buttons)
  (Thanks, BillW)

- Forgot to account for new hash seeds for H1-H3 transforms in scraper engine.  Duh. <smack>
  (CScraper::h_transform) (Thanks, Tinkerer)

- pcbits was not including the kicker in certain two pair hands.  QhJc/Qc9c2d2s for example, was
  returning "16" for pcbits, when "17" was the correct answer. (CSymbols::calc_pokerval) 
  (Thanks, Tinkerer)
  
  